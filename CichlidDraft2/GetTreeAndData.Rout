
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(list=ls())
> library(ape)
Warning message:
package ‘ape’ was built under R version 3.2.5 
> library(geiger)
> library(rfishbase)
Warning message:
package ‘rfishbase’ was built under R version 3.2.5 
> #they had one as AY7403786 but it should be AY740386 (species matches)
> cichlid.accessions<-c("DQ055016", "AY682545", "EF191082", "EF191108", "EF191105", "EF191121", "AF398229", "EF191107", "AF398226", "DQ055023", "EF191083", "EF191117", "EF191096", "AY740388", "DQ055024", "EF191122", "EF191119", "EF191120", "EF191103", "EF191104", "EF191089", "EF191090", "EF191091", "DQ055030", "EF191099", "EF191100", "EF191116", "EF191118", "EF191124", "EF191125", "EF191123", "EF191126", "EF191085", "EF191084", "EF191087", "EF191088", "AY740386", "DQ055019", "EF191093", "DQ055027", "EF191097", "EF191098", "EF191113", "EF191114", "EF191115", "EF191109", "EF191110", "EF191111", "EF191112", "EF191086", "DQ055032", "EF191101", "EF191102", "DQ055036", "DQ055037", "DQ055057", "DQ055034", "DQ055040", "EF191092", "DQ055018", "DQ055041", "DQ055051", "DQ055025", "DQ055038", "DQ055052", "EF191094", "EF191095") #From Koblmüller et al. 2007
> bad<-c()
> system("rm Cichlid.fasta")
> seq<-read.GenBank(cichlid.accessions)
> seq2<-seq
> names(seq2) <- attr(seq, "species")
> write.dna(seq2, file="Cichlid.fasta", format="fasta", nbcol=-1, append=FALSE, colsep = "")
> system("mafft --auto Cichlid.fasta > Cichlid.aln.fasta")

##### atgcfreq = 0.999986
generating a scoring matrix for nucleotide (dist=200) ... done
All-to-all alignment.
    0 / 67
    1 / 67
    2 / 67
    3 / 67
    4 / 67
    5 / 67
    6 / 67
    7 / 67
    8 / 67
    9 / 67
   10 / 67
   11 / 67
   12 / 67
   13 / 67
   14 / 67
   15 / 67
   16 / 67
   17 / 67
   18 / 67
   19 / 67
   20 / 67
   21 / 67
   22 / 67
   23 / 67
   24 / 67
   25 / 67
   26 / 67
   27 / 67
   28 / 67
   29 / 67
   30 / 67
   31 / 67
   32 / 67
   33 / 67
   34 / 67
   35 / 67
   36 / 67
   37 / 67
   38 / 67
   39 / 67
   40 / 67
   41 / 67
   42 / 67
   43 / 67
   44 / 67
   45 / 67
   46 / 67
   47 / 67
   48 / 67
   49 / 67
   50 / 67
   51 / 67
   52 / 67
   53 / 67
   54 / 67
   55 / 67
   56 / 67
   57 / 67
   58 / 67
   59 / 67
   60 / 67
   61 / 67
   62 / 67
   63 / 67
   64 / 67
   65 / 67
tbfast-pair (nuc) Version 7.300b alg=L, model=DNA200 (2), 2.00 (6.00), -0.10 (-0.30), noshift, amax=0.0
0 thread(s)

Loading 'hat3.seed' ... 
done.
Writing hat3 for iterative refinement
generating a scoring matrix for nucleotide (dist=200) ... done
Gap Penalty = -1.53, +0.00, +0.00
Constructing a UPGMA tree ... 

    0 / 67
   10 / 67
   20 / 67
   30 / 67
   40 / 67
   50 / 67
   60 / 67
done.

Progressive alignment ... 

STEP     1 /66 c
STEP     2 /66 c
STEP     3 /66 c
STEP     4 /66 c
STEP     5 /66 c
STEP     6 /66 c
STEP     7 /66 c
STEP     8 /66 c
STEP     9 /66 c
STEP    10 /66 c
STEP    11 /66 c
STEP    12 /66 c
STEP    13 /66 c
STEP    14 /66 c
STEP    15 /66 c
STEP    16 /66 c
STEP    17 /66 c
STEP    18 /66 c
STEP    19 /66 c
STEP    20 /66 c
STEP    21 /66 c
STEP    22 /66 c
STEP    23 /66 c
STEP    24 /66 c
STEP    25 /66 c
STEP    26 /66 c
STEP    27 /66 c
STEP    28 /66 c
STEP    29 /66 c
STEP    30 /66 c
STEP    31 /66 c
STEP    32 /66 c
STEP    33 /66 c
STEP    34 /66 c
STEP    35 /66 c
STEP    36 /66 c
STEP    37 /66 c
STEP    38 /66 c
STEP    39 /66 c
STEP    40 /66 c
STEP    41 /66 c
STEP    42 /66 c
STEP    43 /66 c
STEP    44 /66 c
STEP    45 /66 c
STEP    46 /66 c
STEP    47 /66 c
STEP    48 /66 c
STEP    49 /66 c
STEP    50 /66 c
STEP    51 /66 c
STEP    52 /66 c
STEP    53 /66 c
STEP    54 /66 c
STEP    55 /66 c
STEP    56 /66 c
STEP    57 /66 c
STEP    58 /66 c
STEP    59 /66 c
STEP    60 /66 c
STEP    61 /66 c
STEP    62 /66 c
STEP    63 /66 c
STEP    64 /66 c
STEP    65 /66 c
STEP    66 /66 c
done.
tbfast (nuc) Version 7.300b alg=A, model=DNA200 (2), 1.53 (4.59), -0.00 (-0.00), noshift, amax=0.0
0 thread(s)

minimumweight = 0.000010
autosubalignment = 0.000000
nthread = 0
randomseed = 0
blosum 62 / kimura 200
poffset = 0
niter = 16
sueff_global = 0.100000
Loading 'hat3' ... done.
generating a scoring matrix for nucleotide (dist=200) ... done


    0 / 67
   10 / 67
   20 / 67
   30 / 67
   40 / 67
   50 / 67
   60 / 67
Segment   1/  1    1-1048
STEP 001-001-0  identical.   
STEP 001-001-1  identical.   
STEP 001-002-0  identical.   
STEP 001-002-1  identical.   
STEP 001-003-0  identical.   
STEP 001-003-1  identical.   
STEP 001-004-0  identical.   
STEP 001-004-1  identical.   
STEP 001-005-0  identical.   
STEP 001-005-1  identical.   
STEP 001-006-0  identical.   
STEP 001-006-1  identical.   
STEP 001-007-0  identical.   
STEP 001-007-1  identical.   
STEP 001-008-0  identical.   
STEP 001-008-1  identical.   
STEP 001-009-0  identical.   
STEP 001-009-1  identical.   
STEP 001-010-0  identical.   
STEP 001-010-1  identical.   
STEP 001-011-0  identical.   
STEP 001-011-1  identical.   
STEP 001-012-0  identical.   
STEP 001-012-1  identical.   
STEP 001-013-0  identical.   
STEP 001-013-1  identical.   
STEP 001-014-0  identical.   
STEP 001-014-1  identical.   
STEP 001-015-0  identical.   
STEP 001-015-1  identical.   
STEP 001-016-0  identical.   
STEP 001-016-1  identical.   
STEP 001-017-0  identical.   
STEP 001-017-1  identical.   
STEP 001-018-0  identical.   
STEP 001-018-1  identical.   
STEP 001-019-0  identical.   
STEP 001-019-1  identical.   
STEP 001-020-0  identical.   
STEP 001-020-1  identical.   
STEP 001-021-0  identical.   
STEP 001-021-1  identical.   
STEP 001-022-0  identical.   
STEP 001-022-1  identical.   
STEP 001-023-0  identical.   
STEP 001-023-1  identical.   
STEP 001-024-0  identical.   
STEP 001-024-1  identical.   
STEP 001-025-0  identical.   
STEP 001-025-1  identical.   
STEP 001-026-0  identical.   
STEP 001-026-1  identical.   
STEP 001-027-0  identical.   
STEP 001-027-1  identical.   
STEP 001-028-0  identical.   
STEP 001-028-1  identical.   
STEP 001-029-0  identical.   
STEP 001-029-1  identical.   
STEP 001-030-0  identical.   
STEP 001-030-1  identical.   
STEP 001-031-0  identical.   
STEP 001-031-1  identical.   
STEP 001-032-0  identical.   
STEP 001-032-1  identical.   
STEP 001-033-0  identical.   
STEP 001-033-1  identical.   
STEP 001-034-0  identical.   
STEP 001-034-1  identical.   
STEP 001-035-0  identical.   
STEP 001-035-1  identical.   
STEP 001-036-0  identical.   
STEP 001-036-1  identical.   
STEP 001-037-0  identical.   
STEP 001-037-1  identical.   
STEP 001-038-0  identical.   
STEP 001-038-1  identical.   
STEP 001-039-0  identical.   
STEP 001-039-1  identical.   
STEP 001-040-0  identical.   
STEP 001-040-1  identical.   
STEP 001-041-0  identical.   
STEP 001-041-1  identical.   
STEP 001-042-0  identical.   
STEP 001-042-1  identical.   
STEP 001-043-0  identical.   
STEP 001-043-1  identical.   
STEP 001-044-0  identical.   
STEP 001-044-1  identical.   
STEP 001-045-0  identical.   
STEP 001-045-1  identical.   
STEP 001-046-0  identical.   
STEP 001-046-1  identical.   
STEP 001-047-0  identical.   
STEP 001-047-1  identical.   
STEP 001-048-0  identical.   
STEP 001-048-1  identical.   
STEP 001-049-0  identical.   
STEP 001-049-1  identical.   
STEP 001-050-0  identical.   
STEP 001-050-1  identical.   
STEP 001-051-0  identical.   
STEP 001-051-1  identical.   
STEP 001-052-0  identical.   
STEP 001-052-1  identical.   
STEP 001-053-0  identical.   
STEP 001-053-1  identical.   
STEP 001-054-0  identical.   
STEP 001-054-1  identical.   
STEP 001-055-0  identical.   
STEP 001-055-1  identical.   
STEP 001-056-0  identical.   
STEP 001-056-1  identical.   
STEP 001-057-0  identical.   
STEP 001-057-1  identical.   
STEP 001-058-0  identical.   
STEP 001-058-1  identical.   
STEP 001-059-0  identical.   
STEP 001-059-1  identical.   
STEP 001-060-0  identical.   
STEP 001-060-1  identical.   
STEP 001-061-0  identical.   
STEP 001-061-1  identical.   
STEP 001-062-0  identical.   
STEP 001-062-1  identical.   
STEP 001-063-0  identical.   
STEP 001-063-1  identical.   
STEP 001-064-0  identical.   
STEP 001-064-1  identical.   
STEP 001-065-0  identical.   
STEP 001-065-1  identical.   
STEP 001-066-1  identical.   
STEP 002-066-1  identical.   
STEP 002-065-0  identical.   
STEP 002-065-1  identical.   
Converged.

done
dvtditr (nuc) Version 7.300b alg=A, model=DNA200 (2), 1.53 (4.59), -0.00 (-0.00), noshift, amax=0.0
0 thread(s)


Strategy:
 L-INS-i (Probably most accurate, very slow)
 Iterative refinement method (<16) with LOCAL pairwise alignment information

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

> seq3 <- read.FASTA("Cichlid.aln.fasta")
> names(seq3) <- gsub("'", "", names(seq3))
> seq4 <- as.character(seq3)
> seq4<-seq3[!duplicated(names(seq3))]
> write.dna(seq4, file="Cichlid.for.raxml.txt")
> system("raxml -s Cichlid.for.raxml.txt -g Cichlid.Constraint.phy -f d -m GTRGAMMA -p 12345 -n Cichlid.GTRGAMMA")
RAxML output files with the run ID <Cichlid.GTRGAMMA> already exist 
in directory /Users/bomeara/Dropbox/CollabJhwuengOMeara/ReReSubmission/Cichlid/ ...... exiting
> constraint.tree <- read.tree("Cichlid.Constraint.phy")
> raxml.tree <- read.tree("RAxML_bestTree.Cichlid.RAxML")
> raxml.tree <- reorder(root(raxml.tree, outgroup="Julidochromis_ornatus"))
> write.tree(raxml.tree, file="treePL.input.tre")
> 
> #Note: there were numerical issues with a fixed age of 4.19. So used age of 419, then correct brlen in R
> treePL.correction = 100
> cat(paste("treefile = treePL.input.tre\nsmooth = 100\nnumsites = ", dim(as.matrix(seq3))[2], "\nmrca = FROMPAPER Lamprologus_callipterus Neolamprologus_calliurus\nmin = FROMPAPER ", treePL.correction*round(mean(c(3.80, 4.58)),3), "\nmax = FROMPAPER ", treePL.correction*round(mean(c(3.80, 4.58)),3),"\noutfile = Cichlid.chronogram.tre\nthorough\nprime",sep=""), file="batch.treePL")
> system("treePL batch.treePL")
outfile: Cichlid.chronogram.tre
set thorough: true (MAY TAKE A WHILE)
PRIMING the optimization parameters and then exiting
finished reading config file
tiny branch length at Lamprologus_callipterus_x_Neolamprologus_calliurus. setting to 0.00095510984
tiny branch length at Neolamprologus_fasciatus_x_Neolamprologus_calliurus. setting to 0.00095510984
tiny branch length at Altolamprologus_compressiceps. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
setting FROMPAPER min: 419
setting FROMPAPER max: 419
preorder prep
calculating character durations
setting min and max
setting up all constraints
getting feasible start dates
start rate 0.00013898226
numparams:30
initial calc: 7470.194
LF SIM
exit siman: 250.22165
now priming regular
nfeval: 26 rc: Linear search failed
 final: 250.22165 diff: 0
setting NLOPT: LD_LBFGS 
result: 4
 final: 219.44903 diff: 30.772613
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: -1
 final: 211.65681 diff: 38.564839
setting NLOPT: LD_MMA
result: 4
 final: 248.87665 diff: 1.3449921
setting NLOPT: LD_VAR2 
result: 3
 final: 247.91446 diff: 2.3071837
setting NLOPT : LN_SBPLX 
result: 5
 final: 216.6524 diff: 33.569248
----
now priming AD
nfeval: 124 rc: Linear search failed
 final: 248.18107 diff: 2.0405789
setting NLOPT: LD_LBFGS 
result: 3
 final: 211.65579 diff: 38.56586
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
 final: 211.65576 diff: 38.565888
setting NLOPT: LD_MMA
result: 3
 final: 248.87652 diff: 1.3451259
setting NLOPT: LD_VAR2 
result: 3
 final: 247.91263 diff: 2.3090183
setting NLOPT : LN_SBPLX 
result: 5
 final: 216.6524 diff: 33.569248
----
now priming CV (AD)
nfeval: 9999 rc: Unable to progress
 final: 212.86123 diff: 37.360421
setting NLOPT parallel : LD_LBFGS 
result: 3
 final: 115.46726 diff: 134.75438
setting NLOPT parallel : LD_TNEWTON_PRECOND_RESTART
result: 3
 final: 114.90325 diff: 135.3184
setting NLOPT parallel : LD_MMA
result: 3
 final: 115.60481 diff: 134.61684
setting NLOPT parallel : LD_VAR2 
result: 3
 final: 115.53446 diff: 134.68718
setting NLOPT parallel : LN_SBPLX 
result: 5
 final: 115.47931 diff: 134.74233
best: 2(0) bestad: 2 (1) bestcv: 2 (1)
PLACE THE LINES BELOW IN THE CONFIGURATION FILE
opt = 2
optad = 2
moredetailad
optcvad = 2
moredetailcvad
> 
> #manually got the optimal parameters from first run. Ran again.
> 
> cat(paste("treefile = treePL.input.tre
+ smooth = 100
+ numsites = 1047
+ mrca = FROMPAPER Lamprologus_callipterus Neolamprologus_calliurus
+ min = FROMPAPER 419
+ max = FROMPAPER 419
+ outfile = Cichlid.chronogram.tre
+ opt = 5
+ moredetail
+ optad = 2
+ optcvad = 2
+ moredetailcvad
+ randomcv
+ "), file="batch.treePL")
> system("treePL batch.treePL")
outfile: Cichlid.chronogram.tre
setting opt: 5
setting optad: 2
setting optcvad: 2
finished reading config file
tiny branch length at Lamprologus_callipterus_x_Neolamprologus_calliurus. setting to 0.00095510984
tiny branch length at Neolamprologus_fasciatus_x_Neolamprologus_calliurus. setting to 0.00095510984
tiny branch length at Altolamprologus_compressiceps. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
tiny branch length at internal node. setting to 0.00095510984
setting FROMPAPER min: 419
setting FROMPAPER max: 419
preorder prep
calculating character durations
setting min and max
setting up all constraints
getting feasible start dates
start rate 0.00013898226
numparams:30
initial calc: 7470.194
LF SIM
exit siman: 250.22165
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 216.6524
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 211.65576
LF SIM
exit siman: 211.65576
setting NLOPT : LN_SBPLX 
result: 3
after opt calc1: 211.65576
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: -1
calculating without gradient (might want to try a different optad=VALUE)
setting NLOPT : LN_SBPLX 
result: 4
after opt calc2: 211.65576
LF SIM
exit siman: 211.65576
setting NLOPT : LN_SBPLX 
result: 4
after opt calc1: 211.65576
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: -1
calculating without gradient (might want to try a different optad=VALUE)
setting NLOPT : LN_SBPLX 
result: 4
after opt calc2: 211.65576
exited lf converged :1
lf calc: 211.65576
numparams:90
smoothing:100
211.65576
exit siman: 130.11294
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 128.65158
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 125.64839
exit siman: 125.64851
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 125.64839
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 125.64839
exit siman: 125.64839
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 125.64839
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 125.64839
exit siman: 125.64839
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 125.64839
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 125.64839
exit siman: 125.64839
setting NLOPT : LN_SBPLX 
result: 5
after opt calc1: 125.64839
setting NLOPT: LD_TNEWTON_PRECOND_RESTART
result: 3
after opt calc2: 125.64839
after opt calc: 125.64839
> 
> 
> 
> phy <- read.tree("Cichlid.chronogram.tre")
> phy$edge.length <- phy$edge.length/treePL.correction
> 
> #need to rescale tree to use Kolbmuller et al calibration. They said: Within the lamprologines, the inferred hybridization partners are only distantly related, as the split between the mitochondrial lineages including N. brevis/calliurus and the lineage containing L. callipterus and N. fasciatus is esti- mated as 3.80 (± 1.33) – 4.58 (± 1.60) million years before presence
> #We take the mean of this range for our point estimate
> #patristic.distance.of.node <- cophenetic(phy)["Lamprologus_callipterus", "Neolamprologus_calliurus"]
> #phy$edge.length <- phy$edge.length*mean(c(3.80, 4.58)) / (0.5*patristic.distance.of.node) #divided by two as it's distance down and back up
> 
> 
> fish.data<- species(gsub("_", " ",(phy$tip.label)))
Warning message:
In species(gsub("_", " ", (phy$tip.label))) :
  0 of the supplied species names did not match any species in the database: 

> traits <- log(fish.data$Length)
> names(traits) <- gsub(" ", "_", fish.data$sciname)
> pruned<-treedata(phy, traits, sort=TRUE)
Warning message:
In treedata(phy, traits, sort = TRUE) :
  The following tips were not found in 'data' and were dropped from 'phy':
	Altolamprologus_sp._shell
	Lamprologus_callipterus_x_Neolamprologus_calliurus
	Neolamprologus_calliurus
	Neolamprologus_cf._meeli/boulengeri
	Neolamprologus_fasciatus_x_Neolamprologus_calliurus
> 
> 
> 
> write.tree(pruned$phy, file="Cichlid.phy")
> write.csv(pruned$data, "Cichlid.csv")
> 
> proc.time()
   user  system elapsed 
 29.439   0.447  50.995 
